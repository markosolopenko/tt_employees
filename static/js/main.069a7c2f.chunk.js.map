{"version":3,"sources":["pages/Employees/Employees.module.scss","components/BirthdaysList/BirthdaysList.module.scss","actionTypes/employees.tsx","components/ListOfEmployees/ListOfEmployees.tsx","actionCreators/employees.tsx","api/api.tsx","common/Loader/Loader.tsx","helpers/sortEmployeesByLastName.ts","constants/lists.ts","helpers/sortEmployeesByMonths.ts","components/BirthdaysList/BirthdaysList.tsx","pages/Employees/Employees.tsx","thunks/employeesThunks.tsx","api/usersRequests.tsx","App.tsx","reducers/employeesReducer.tsx","core/rootReducer.tsx","core/store.tsx","index.tsx","components/ListOfEmployees/ListOfEmployees.module.scss"],"names":["module","exports","FETCH_USERS_SUCCESS","FETCH_USERS_REJECTED","FETCH_USERS_PENDING","SELECT_NEW_EMPLOYEE","DELETE_EMPLOYEE_ID","ListOfEmployees","sortedEmployees","dispatch","useDispatch","selectedIds","useSelector","state","employees","handleActiveChange","id","type","payload","selectNewEmployee","localStorage","setItem","JSON","stringify","handleNotActiveChange","deleteEmployeeId","updateArr","filter","item","className","s","map","obj","index","letter","array","employee","isEmpty","includes","lastName","firstName","onClick","value","checked","readOnly","axiosInstance","axios","create","baseURL","Loader","pending","alphabet","toUpperCase","split","monthsFromNow","monthsSortedByCalendar","BirthdaysList","employeesList","useState","parse","getItem","selectedIdsList","setSelectedIds","useEffect","selectedEmployees","useMemo","sortedArrayByDate","newObj","month","days","years","sortedArr","i","length","date","Date","dob","day","getDate","getMonth","year","getFullYear","push","sortedInnerArray","sort","a","b","sortEmployeesByMonths","alEmpty","user","Employees","get","response","users","data","error","message","sortedArrByLastName","newArr","isTheSame","sortEmployeesByLastName","App","path","component","to","initState","rootReducer","combineReducers","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.069a7c2f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"employees-page\":\"Employees_employees-page__O-6yL\",\"employees-page__list\":\"Employees_employees-page__list__1Q7YS\",\"employees-page__list__title\":\"Employees_employees-page__list__title__3iUVD\",\"employees-page__birthday\":\"Employees_employees-page__birthday__12gjT\",\"employees-page__birthday__title\":\"Employees_employees-page__birthday__title__13LEo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"birthdays-list__message\":\"BirthdaysList_birthdays-list__message__2gn_b\",\"birthdays-list__month\":\"BirthdaysList_birthdays-list__month__2jESj\",\"birthdays-list__item\":\"BirthdaysList_birthdays-list__item__RxoLd\",\"birthdays-list__item__info\":\"BirthdaysList_birthdays-list__item__info__2fqh4\"};","export const FETCH_USERS_SUCCESS = 'FETCH_USERS_SUCCESS';\nexport const FETCH_USERS_REJECTED = 'FETCH_USERS_REJECTED';\nexport const FETCH_USERS_PENDING = 'FETCH_USERS_PENDING';\nexport const SELECT_NEW_EMPLOYEE = 'SELECT_NEW_EMPLOYEE';\nexport const DELETE_EMPLOYEE_ID = 'DELETE_EMPLOYEE_ID';\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteEmployeeId, IEmployees, selectNewEmployee } from '../../actionCreators/employees';\nimport { INewObject } from '../../helpers/sortEmployeesByLastName';\nimport s from './ListOfEmployees.module.scss';\n\ninterface IProps {\n  sortedEmployees: INewObject[];\n}\n\nexport const ListOfEmployees: React.FC<IProps> = ({ sortedEmployees }: IProps) => {\n  const dispatch = useDispatch();\n  const { employees }: any = useSelector((state) => state);\n  const { selectedIds } = employees;\n\n  const handleActiveChange = (id: number) => {\n    dispatch(selectNewEmployee(id));\n    localStorage.setItem('selectedUsers', JSON.stringify([...selectedIds, id]));\n  };\n  const handleNotActiveChange = (id: number) => {\n    dispatch(deleteEmployeeId(id));\n    const updateArr = selectedIds.filter((item: number) => item !== id);\n    localStorage.setItem('selectedUsers', JSON.stringify(updateArr));\n  };\n\n  return (\n    <div className={s['employees-list']}>\n      {sortedEmployees.map((obj, index) => (\n        <div key={index} className={s['employees-list__box']}>\n          <div className={s['employees-list__letter']}>{obj.letter}</div>\n          <div className={s['employees-list__box__card']}>\n            {obj.array.map((employee: IEmployees) =>\n              !obj.isEmpty ? (\n                <div className={s['employees-list__item']} key={employee.id}>\n                  <div\n                    className={`${s['employees-list__item__name']} ${\n                      selectedIds.includes(employee.id) && s['employees-list__item__name--active']\n                    }`}\n                  >\n                    {employee.lastName}&nbsp;{employee.firstName}\n                  </div>\n                  <div\n                    className={s['employees-list__item__input']}\n                    onClick={() => handleNotActiveChange(employee.id)}\n                  >\n                    <label className={s['employees-list__item__input__notactive']}>not active</label>\n                    <input\n                      type=\"radio\"\n                      value=\"notactive\"\n                      checked={!selectedIds.includes(employee.id)}\n                      readOnly\n                    />\n                  </div>\n                  <div\n                    className={s['employees-list__item__input']}\n                    onClick={() => handleActiveChange(employee.id)}\n                  >\n                    <label className={s['employees-list__item__input__active']}>active</label>\n                    <input type=\"radio\" value=\"active\" checked={selectedIds.includes(employee.id)} readOnly />\n                  </div>\n                </div>\n              ) : (\n                <div className={s['employees-list__item']} key={obj.letter}>\n                  {employee}\n                </div>\n              ),\n            )}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n","import {\n  FETCH_USERS_PENDING,\n  FETCH_USERS_REJECTED,\n  FETCH_USERS_SUCCESS,\n  SELECT_NEW_EMPLOYEE,\n  DELETE_EMPLOYEE_ID,\n} from '../actionTypes/employees';\n\nexport interface IEmployees {\n  id: number;\n  firstName: string;\n  lastName: string;\n  dob: Date;\n}\nexport type EmployeesActions =\n  | { type: 'FETCH_USERS_SUCCESS'; payload: { data: IEmployees[] } }\n  | { type: 'FETCH_USERS_REJECTED'; payload: { error: string } }\n  | { type: 'FETCH_USERS_PENDING' }\n  | { type: 'SELECT_NEW_EMPLOYEE'; payload: { id: number } }\n  | { type: 'DELETE_EMPLOYEE_ID'; payload: { id: number } };\n\nexport const getUsersSuccess = (users: IEmployees[]): EmployeesActions => {\n  return { type: FETCH_USERS_SUCCESS, payload: { data: users } };\n};\n\nexport const getUsersRejected = (error: string): EmployeesActions => {\n  return { type: FETCH_USERS_REJECTED, payload: { error: error } };\n};\n\nexport const getUsersPending = (): EmployeesActions => {\n  return { type: FETCH_USERS_PENDING };\n};\n\nexport const selectNewEmployee = (id: number) => {\n  return { type: SELECT_NEW_EMPLOYEE, payload: { id: id } };\n};\n\nexport const deleteEmployeeId = (id: number) => {\n  return { type: DELETE_EMPLOYEE_ID, payload: { id: id } };\n};\n","import axios from 'axios';\n\nexport const axiosInstance = axios.create({ baseURL: 'https://yalantis-react-school-api.yalantis.com/api' });\n","import { useSelector } from 'react-redux';\n\nexport const Loader = () => {\n  const store = useSelector((state) => state);\n  const { employees }: any = store;\n  return employees.pending && <div>Loading...</div>;\n};\n","import { IEmployees } from '../actionCreators/employees';\nimport { alphabetUpper } from '../constants/lists';\n\nconst alphabet = alphabetUpper;\n\nexport interface INewObject {\n  letter: string;\n  array: IEmployees[] | any;\n  isEmpty: boolean;\n}\nexport const sortEmployeesByLastName: Function = (employees: IEmployees[]) => {\n  const newArr = [];\n  let newObj: INewObject = { letter: '', array: [], isEmpty: false };\n  let isTheSame = false;\n\n  const sortedArr = employees.sort((a, b) => (a.lastName > b.lastName ? 1 : -1));\n\n  for (let i = 0; i < alphabet.length; i++) {\n    newObj.letter = alphabet[i];\n    for (let index = 0; index < sortedArr.length; index++) {\n      if (alphabet[i] === sortedArr[index].lastName[0]) {\n        isTheSame = true;\n        newObj.array.push(sortedArr[index]);\n      }\n    }\n    if (!isTheSame) {\n      newObj.letter = alphabet[i];\n      newObj.array = ['_ _ _ _'];\n      newObj.isEmpty = true;\n    }\n    isTheSame = false;\n    newArr.push(newObj);\n    newObj = { letter: '', array: [], isEmpty: false };\n  }\n  return newArr;\n};\n","export const months = [\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n  'January',\n  'February',\n];\nexport const monthsSorted = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\n\nexport const alphabetUpper = 'abcdefghijklmnopqrstuvwxyz'.toUpperCase().split('');\n","import { IEmployees } from '../actionCreators/employees';\nimport { months, monthsSorted } from '../constants/lists';\n\nexport interface INewObj {\n  month: string;\n  array: IEmployees[];\n  days: number[];\n  years: number[];\n}\nconst monthsFromNow = months;\nconst monthsSortedByCalendar = monthsSorted;\n\nexport const sortEmployeesByMonths: Function = (selectedEmployees: IEmployees[]) => {\n  let newObj: INewObj = { month: '', array: [], days: [], years: [] };\n  const sortedArr = [];\n  for (let i = 0; i < monthsFromNow.length; i++) {\n    newObj.month = monthsFromNow[i];\n    for (let index = 0; index < selectedEmployees.length; index++) {\n      const date = new Date(selectedEmployees[index].dob);\n      const day = date.getDate();\n      const month = monthsSortedByCalendar[date.getMonth()];\n      const year = date.getFullYear();\n\n      if (month === monthsFromNow[i]) {\n        newObj.array.push(selectedEmployees[index]);\n        newObj.days.push(day);\n        newObj.years.push(year);\n      }\n    }\n\n    const sortedInnerArray = newObj.array.sort((a, b) => (a.lastName > b.lastName ? 1 : -1));\n    newObj.array = sortedInnerArray;\n    sortedArr.push(newObj);\n    newObj = { month: '', array: [], days: [], years: [] };\n  }\n  return sortedArr;\n};\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { IEmployees } from '../../actionCreators/employees';\nimport { INewObj, sortEmployeesByMonths } from '../../helpers/sortEmployeesByMonths';\n\nimport s from './BirthdaysList.module.scss';\n\ninterface IProps {\n  employeesList: IEmployees[];\n}\n\nexport const BirthdaysList: React.FC<IProps> = ({ employeesList }) => {\n  const [selectedIdsList, setSelectedIds] = useState(\n    JSON.parse(localStorage.getItem('selectedUsers') || '[]'),\n  );\n  const { employees }: any = useSelector((state) => state);\n  const { selectedIds } = employees;\n\n  useEffect(() => {\n    setSelectedIds(JSON.parse(localStorage.getItem('selectedUsers') || '[]'));\n  }, [selectedIds]);\n\n  const selectedEmployees = useMemo(() => {\n    return employeesList.filter((employee) => selectedIdsList.includes(employee.id));\n  }, [selectedIdsList]);\n\n  const sortedArrayByDate = useMemo(() => {\n    return sortEmployeesByMonths(selectedEmployees);\n  }, [selectedEmployees]);\n  let alEmpty = true;\n  return (\n    <div className={s['birthdays-list']}>\n      {sortedArrayByDate.map((obj: INewObj, index: number) => {\n        return (\n          obj.array.length !== 0 && (\n            <div key={index}>\n              <div className={s['birthdays-list__month']}>{obj.month}</div>\n              {obj.array.map((user: IEmployees, index: number) => {\n                alEmpty = false;\n                return (\n                  <div className={s['birthdays-list__item']} key={user.id}>\n                    <div className={s['birthdays-list__item__info']}>\n                      &#9679;&nbsp;{user.lastName}&nbsp;{user.firstName} - {obj.days[index]} {obj.month}\n                      ,&nbsp;\n                      {obj.years[index]} year\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          )\n        );\n      })}\n      {alEmpty && <div className={s['birthdays-list__message']}>Employees List is empty</div>}\n    </div>\n  );\n};\n","import { useEffect, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ListOfEmployees } from '../../components/ListOfEmployees/ListOfEmployees';\nimport { fetchEmployeesThunk } from '../../thunks/employeesThunks';\nimport s from './Employees.module.scss';\nimport { Loader } from '../../common/Loader/Loader';\nimport { sortEmployeesByLastName } from '../../helpers/sortEmployeesByLastName';\nimport { BirthdaysList } from '../../components/BirthdaysList/BirthdaysList';\n\nexport const Employees: React.FC = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchEmployeesThunk());\n  }, []);\n\n  const store = useSelector((state) => state);\n  const { employees }: any = store;\n  const { employeesList } = employees;\n\n  const sortedArrByLastName = useMemo(() => {\n    return sortEmployeesByLastName(employeesList);\n  }, [employeesList]);\n  return (\n    <div className={s['employees-page']}>\n      {sortedArrByLastName.length !== 0 ? (\n        <>\n          <div className={s['employees-page__list']}>\n            <div className={s['employees-page__list__title']}>Employees</div>\n            <ListOfEmployees sortedEmployees={sortedArrByLastName} />\n          </div>\n          <div className={s['employees-page__birthday']}>\n            <div className={s['employees-page__birthday__title']}>Employees birthday</div>\n            <BirthdaysList employeesList={employeesList} />\n          </div>\n        </>\n      ) : (\n        <Loader />\n      )}\n    </div>\n  );\n};\n","import { Dispatch } from 'react';\nimport {\n  EmployeesActions,\n  getUsersPending,\n  getUsersRejected,\n  getUsersSuccess,\n} from '../actionCreators/employees';\nimport { fetchUsers } from '../api/usersRequests';\n\nexport const fetchEmployeesThunk = () => async (dispatch: Dispatch<EmployeesActions>) => {\n  dispatch(getUsersPending());\n  try {\n    const response = await fetchUsers();\n    dispatch(getUsersSuccess(response.data));\n  } catch (e) {\n    dispatch(getUsersRejected(e.message));\n  }\n};\n","import { axiosInstance } from './api';\n\nexport const fetchUsers = () => {\n  return axiosInstance.get('/task0/users');\n};\n","import { Route, Switch, Redirect } from 'react-router';\nimport { Routes } from './constants/routes';\nimport { Employees } from './pages/Employees/Employees';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route path={'/tt_employees'} component={Employees} />\n\n        <Redirect to={'/tt_employees'} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import { EmployeesActions, IEmployees } from '../actionCreators/employees';\nimport {\n  DELETE_EMPLOYEE_ID,\n  FETCH_USERS_PENDING,\n  FETCH_USERS_REJECTED,\n  FETCH_USERS_SUCCESS,\n  SELECT_NEW_EMPLOYEE,\n} from '../actionTypes/employees';\n\ninterface IState {\n  employeesList: IEmployees[];\n  error: string;\n  pending: boolean;\n  selectedIds: number[];\n}\n\nconst initState: IState = {\n  employeesList: [],\n  error: '',\n  pending: false,\n  selectedIds: JSON.parse(localStorage.getItem('selectedUsers') || '[]'),\n};\n\nexport const employeesReducer = (state = initState, action: EmployeesActions) => {\n  switch (action.type) {\n    case FETCH_USERS_SUCCESS:\n      return {\n        ...state,\n        employeesList: action.payload.data,\n        error: null,\n        pending: false,\n      };\n    case FETCH_USERS_REJECTED:\n      return {\n        ...state,\n        error: action.payload.error,\n        employeesList: [],\n        pending: false,\n      };\n    case FETCH_USERS_PENDING:\n      return {\n        ...state,\n        error: null,\n        employeesList: [],\n        pending: true,\n      };\n    case SELECT_NEW_EMPLOYEE:\n      return {\n        ...state,\n        selectedIds: [...state.selectedIds, action.payload.id],\n      };\n    case DELETE_EMPLOYEE_ID:\n      return {\n        ...state,\n        selectedIds: state.selectedIds.filter((id) => id !== action.payload.id),\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { employeesReducer } from '../reducers/employeesReducer';\n\nexport const rootReducer = combineReducers({ employees: employeesReducer });\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport { rootReducer } from './rootReducer';\n\nexport const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './App';\nimport { store } from './core/store';\n\nimport './index.css';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"employees-list\":\"ListOfEmployees_employees-list__j0Elr\",\"employees-list__box__card\":\"ListOfEmployees_employees-list__box__card__3padu\",\"employees-list__letter\":\"ListOfEmployees_employees-list__letter__1GbA1\",\"employees-list__item\":\"ListOfEmployees_employees-list__item__2YB1l\",\"employees-list__item__name\":\"ListOfEmployees_employees-list__item__name__DCfTP\",\"employees-list__item__name--active\":\"ListOfEmployees_employees-list__item__name--active__1R-tb\",\"employees-list__item__input\":\"ListOfEmployees_employees-list__item__input__3yXBn\",\"employees-list__item__input__notactive\":\"ListOfEmployees_employees-list__item__input__notactive__11N7s\",\"employees-list__item__input__active\":\"ListOfEmployees_employees-list__item__input__active__3SPTc\"};"],"sourceRoot":""}